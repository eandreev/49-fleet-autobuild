[Unit]
Description=Announce Apache

# Requirements
Requires=etcd2.service
Requires=apache@%i.service
 
# Dependency ordering and binding
After=etcd2.service
After=apache@%i.service
BindsTo=apache@%i.service


[Service]
# Let processes take awhile to start up (for first run Docker containers)
TimeoutStartSec=0

# Get CoreOS environmental variables
EnvironmentFile=/etc/environment

# Start
## Test whether service is accessible and then register useful information
#ExecStart=/bin/bash -c '\
#  while true; do \
#    curl -f ${COREOS_PRIVATE_IPV4}:80; \
#    if [ $? -eq 0 ]; then \
#      etcdctl set /services/apache/${COREOS_PRIVATE_IPV4} \'${COREOS_PRIVATE_IPV4}:80\' --ttl 30; \
#    else \
#      etcdctl rm /services/apache/${COREOS_PRIVATE_IPV4} || true; \
#    fi; \
#    sleep 20; \
#  done'
# ExecStop=/usr/bin/etcdctl rm /services/apache/${COREOS_PRIVATE_IPV4}

#ExecStartPre=-/usr/bin/docker kill apache-discovery.%i
#ExecStartPre=-/usr/bin/docker rm apache-discovery.%i
ExecStartPre=/usr/bin/docker pull eandreev/discovery
ExecStart=/usr/bin/docker run \
    --rm \
    --name apache-discovery.%i \
    --memory 256m \
    eandreev/discovery \
        php /var/www/php/check-apache.php \
            ${COREOS_PRIVATE_IPV4}:2379,${COREOS_PRIVATE_IPV4}:4001 \
            ${COREOS_PRIVATE_IPV4} \
            80
ExecStop=-/usr/bin/etcdctl rm /services/apache/${COREOS_PRIVATE_IPV4}
ExecStop=/usr/bin/docker stop apache-discovery.%i


[X-Fleet]
# Schedule on the same machine as the associated Apache service
MachineOf=apache@%i.service
Conflicts=apache-discovery@*.service

